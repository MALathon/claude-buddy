# Claude Buddy Environment Configuration
# Copy this file to .env in your project root and customize as needed

# ========================================
# EXTERNAL PROCESS TIMEOUTS (seconds)
# ========================================

# TDD-Guard validation timeout
# How long to wait for TDD-Guard CLI to validate test-first development
TDD_GUARD_TIMEOUT_SECONDS=300

# External tool availability check timeout
# How long to wait when checking if tools like npm, claude, tdd-guard are installed
EXTERNAL_TOOL_CHECK_TIMEOUT_SECONDS=30

# MCP server communication timeout
# How long to wait for Context7 MCP server responses (documentation fetching)
MCP_CALL_TIMEOUT_SECONDS=20

# Claude agent execution timeout
# How long to wait for Claude CLI calls (auto-fixing, code generation)
# This is the base timeout - actual timeout scales with complexity
CLAUDE_AGENT_TIMEOUT_SECONDS=300

# NPM operations timeout
# How long to wait for npm install/list operations during setup
NPM_INSTALL_TIMEOUT_SECONDS=300

# Linter process timeout
# How long to wait for individual linter tools (black, flake8, mypy, etc.)
LINTER_PROCESS_TIMEOUT_SECONDS=60

# ========================================
# USAGE NOTES
# ========================================

# These timeouts prevent Claude Buddy from hanging when external tools are:
# - Unresponsive due to network issues
# - Taking longer than expected on slow systems
# - Encountering permission or configuration problems
# - Waiting for user input (should never happen, but safety net)

# Increase timeouts if you have:
# - Slow internet connection (MCP_CALL_TIMEOUT_SECONDS)
# - Large codebases requiring complex fixes (CLAUDE_AGENT_TIMEOUT_SECONDS)  
# - Slower development machine (all timeouts)

# Decrease timeouts if you want:
# - Faster failure detection
# - More responsive hook execution
# - Tighter resource constraints