[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
# Strict mode
skip-string-normalization = false
skip-magic-trailing-comma = false
extend-exclude = '''
/(
  # directories
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
  | .claude
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
skip = [".git", ".hg", ".mypy_cache", ".tox", ".venv", "_build", "buck-out", "build", "dist", ".claude"]

[tool.mypy]
python_version = "3.12"
# Strict mode
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_calls = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
strict_concatenate = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
no_implicit_reexport = true
warn_unreachable = true

# Per-module options for third-party libraries
[[tool.mypy.overrides]]
module = [
    "pytest.*",
    "requests.*",
    "numpy.*",
    "pandas.*",
]
ignore_missing_imports = true

[tool.ruff]
# Strict settings
line-length = 88
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "A",   # flake8-builtins
    "S",   # flake8-bandit
    "T10", # flake8-debugger
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # flake8-eradicate
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PL",  # pylint
    "TRY", # tryceratops
    "RUF", # ruff-specific rules
]
ignore = [
    "E203",  # Black compatibility
    "E501",  # Line length (handled by Black)
    "D100",  # Missing module docstring (optional)
    "D104",  # Missing public package docstring (optional)
]
exclude = [
    ".git",
    "__pycache__",
    ".mypy_cache",
    ".tox",
    ".venv",
    "build",
    "dist",
    ".claude",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "D104"]
"test_*.py" = ["S101", "D100", "D101", "D102", "D103"]